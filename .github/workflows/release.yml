name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  goreleaser:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Go
        uses: actions/setup-go@v5
        with: { go-version-file: go.mod }

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Export GPG public key
        run: |
          echo ${{ steps.import_gpg.outputs.fingerprint }} > key.fingerprint
          gpg --armor --export ${{ steps.import_gpg.outputs.keyid }} > key.asc

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean --snapshot=${{ !startsWith(github.ref, 'refs/tags/v') }}
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive artifacts for use in Docker build
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist

  dockerpublish:
  name: Build and deploy the image
  needs: goreleaser
  runs-on: ubuntu-latest
  permissions:
    packages: write
    contents: read

  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push the image to GHCR
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/spacelift-promex:${{ github.ref == 'refs/heads/main' && 'future' || 'latest' }}
          ${{ startsWith(github.ref, 'refs/tags/v') && format('ghcr.io/{0}/spacelift-promex:{1}', github.repository_owner, github.ref_name) || '' }}
